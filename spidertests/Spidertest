pipeline {

    agent any

    stages {
       stage('SOAP testing') {
            steps {
                withCredentials([certificate(credentialsId: 'TSTNMT2321000156-B02', keystoreVariable: 'CERTKEY', passwordVariable: 'CERTKEYPWD')]) {
                    sh """
                        openssl pkcs12 -nodes -out $"WORKSPACE//CRT.pem" -passin pass:"$CERTKEYPWD" -in $CERTKEY
			docker build -t spidertests ./spidertests/
                        docker run \
                               -v "$WORKSPACE/spidertests":/usr/src/spidertests \
                               -w /usr/src/spidertests \
                               -e CERTFILE=/usr/src/spider/CRT.pem \
                               -e PLATFORM=$PLATFORM \
                               -e ENVIRONMENT=$ENVIRONMENT \
                               -e CONSUMERHSAID=$CONSUMERHSAID \
                               -e SERVICEURL=$SERVICEURL \
                               -e WSDLURL=$WSDLURL \
                               python:3 spidertest.py
                    """
                }
            }
        }
    }

    post {
        always {
            // Archive results
            junit healthScaleFactor: 100.0, testResults: 'spideroutput.xml'
        }
    }
}
